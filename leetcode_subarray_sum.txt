1 2 3 4 5 -5

sums = [1 3 6 10 15 10]
sums[3] = 10
sums[5] = 10

naive solution O(n^2):
rolling window of each size of window
repeated computations: each smaller window

slightly less naive solution: DP for each smaller window
O(n^2)

T(n) = 2T(n-1) + O(1)
T(0) = O(1)

T(n) = 2[2T(n-2) + O(1)] + O(1)
     = 4T(n-2) + 3O(1)
     = 4[2T(n-3) + O(1)] + O(1)
     = 8T(n-3) + 5O(1)
     = 2^kT(n-k) + (k+1)O(1)
     = 2^(n-1)T(1) + n-1


n-k = 1???
k = n-1
n??

just use one array:

1 2 3 4 5

window size 1:
1 2 3 4 5

window size 2 (s2):
3 5 7 9

window size 3:
s2[0] + s1[2] = 3 + 3 = 6
s2[1] + s1[3] = 5 + 4 = 9
s2[2] + s1[4] = 7 + 5 = 12
6 9 12

window size 4:
s3[0] + s1[3] = 6 + 4 = 10
s3[1] + s1[4] = 9 + 5 = 14
10 14

still n^2??

what work is being duplicated?

1 2 3 4 5
  1 2 3 4 5
  3 5 7 9

1 2 3 4 5
    3 5 7 9
    6 9 12

1 2 3 4  5
      6  9  12
      10 14
